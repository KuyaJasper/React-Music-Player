{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","serviceWorker.js","index.js"],"names":["Player","isPlaying","setIsPlaying","audioRef","setSongInfo","songInfo","songs","setCurrentSong","currentSong","activeLibraryHandler","useEffect","current","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","song","id","length","play","trackAnimation","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","value","onChange","event","target","type","onClick","icon","faAngleLeft","size","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","LibrarySong","setSongs","songSelectHandler","newSongs","map","active","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","uuidv4","audio","App","useRef","useState","data","nextPrev","timeHandler","roundedCurrent","round","roundedDuration","percentage","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e4021a81.chunk.js","sourcesContent":["import React, { useEffect, } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = ({\n  isPlaying,\n  setIsPlaying,\n  audioRef,\n  setSongInfo,\n  songInfo,\n  songs,\n  setCurrentSong,\n  currentSong,\n  activeLibraryHandler,\n}) => {\n\n  //useEffect\n\n  useEffect(() => {\n    //Add Active State\n    audioRef.current[isPlaying ? \"play\" : \"pause\"]();\n  }, [isPlaying, currentSong, audioRef]);\n\n  //Event Handlers\n\n\n  const playSongHandler = () => {\n    // console.log(audioRef.current); <=== best practice to see if useRef is working as intended\n\n    if (isPlaying) {\n      // .pause/ .play  method is built into the audio tag.\n      // setIsPlaying(!isPlaying) is a true/false function using the states passed down as props\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const getTime = (time) => {\n    return (\n      //formats time into seconds and minutes\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  };\n\n  const dragHandler = (event) => {\n    audioRef.current.currentTime = event.target.value;\n    setSongInfo({ ...songInfo, currentTime: event.target.value });\n  };\n\n  const skipTrackHandler = async (direction) => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n\n    //Forward BAck\n    if (direction === \"skip-forward\") {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\n    }\n    if (direction === \"skip-back\") {\n      if ((currentIndex - 1) % songs.length === -1) {\n        await setCurrentSong(songs[songs.length - 1]);\n        activeLibraryHandler(songs[songs.length - 1]);\n        return;\n      }\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\n    }\n    if (isPlaying) audioRef.current.play();\n  };\n\n\n  //Add the styles\n  const trackAnimation = {\n    transform: `translateX(${songInfo.animationPercentage}%)`,\n  };\n\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <div\n          style={{\n            background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`,\n          }}\n          className=\"track\"\n        >\n          <input\n            min={0}\n            max={songInfo.duration || 0}\n            value={songInfo.currentTime}\n            onChange={dragHandler}\n            type=\"range\"\n          />\n          <div style={trackAnimation} className=\"animate-track\"></div>\n        </div>\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-back\")}\n          className=\"skip-back\"\n          icon={faAngleLeft}\n          size=\"2x\"\n        />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          className=\"play\"\n          //? and : is a turnerary operator to invoke the icons\n          icon={isPlaying ? faPause : faPlay}\n          size=\"2x\"\n        />\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-forward\")}\n          className=\"skip-forward\"\n          icon={faAngleRight}\n          size=\"2x\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n","import React from 'react';\n\nconst Song = ({currentSong}) => {\n    return (\n        <div className=\"song-container\">\n        <img alt ={currentSong.name} src={currentSong.cover}></img>\n        <h2>{currentSong.name}</h2>\n        <h3>{currentSong.artist}</h3>\n        </div>\n    )\n};\n\nexport default Song;","import React from \"react\";\n\n\nconst LibrarySong = ({\n  song,\n  setCurrentSong,\n  audioRef,\n  isPlaying,\n  songs,\n  id,\n  setSongs,\n}) => {\n  const songSelectHandler = async() => {\n    await setCurrentSong(song);\n    //Add Active State\n\n    const newSongs = songs.map((song) => {\n      if (song.id === id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n    //checks if the song is playing\n    if(isPlaying) audioRef.current.play();\n  };\n\n  return (\n    <div\n      onClick={songSelectHandler}\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\n    >\n      <img alt={song.name} src={song.cover}></img>\n      <div className=\"song-desctiption\">\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n","import React from \"react\";\nimport LibrarySrong from \"./LibrarySong\";\n\nconst Library = ({ songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus }) => {\n  return (\n    <div className={`library ${libraryStatus ? 'active-library' : \"\"}`}>\n      <h2>Library</h2>\n      <div className=\"library-songs\">\n        {songs.map((song) => (\n          <LibrarySrong\n            songs={songs}\n            song={song}\n            setCurrentSong={setCurrentSong}\n            id={song.id}\n            key={song.id}\n            audioRef={audioRef}\n            isPlaying={isPlaying}\n            setSongs={setSongs}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Library;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {faMusic} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nav = ({setLibraryStatus, libraryStatus}) => {\n    return(\n        <nav>\n            <h1>Chill Zone</h1>\n            <button onClick={()=> setLibraryStatus(!libraryStatus)} >Library <FontAwesomeIcon icon={faMusic}/></button>\n        </nav>\n    );\n}\n\nexport default Nav;","import { v4 as uuidv4 } from \"uuid\";\n\n// Information was taken from Chillhop.com, and inspecting the elements via Chrome. Music is copyright free.\n\nfunction chillHop() {\n  return [\n    {\n      name: \"Cruisin\",\n      artist: \"Cloudchord, G Mills\",\n      cover: \"https://chillhop.com/wp-content/uploads/2020/07/8404541e3b694d16fd79433b142ed910f36764dd.jpg\",\n      id: uuidv4(),\n      active: false,\n      color: [\"#FFB1A7\",\"#FF184B\"],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=8200\",\n    },\n    {\n      name: \"Bliss\",\n      artist: \"Misha, Jussi Halme\",\n      cover: \"https://chillhop.com/wp-content/uploads/2020/09/5bff1a6f1bd0e2168d29b4c841b811598135e457.jpg\",\n      id: uuidv4(),\n      active: false,\n      color: [\"#2A416D\",\"#EB8086\"],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9248\",\n    },\n    {\n      name: \"Beaver Creek\",\n      artist: \"Aso, Middle School, Aviino\",\n      cover: \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d.jpg\",\n      id: uuidv4(),\n      active: false,\n      color: [\"#FCC376\",\"#289490\"],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10076\",\n    },\n    {\n      name: \"Higher\",\n      artist: \"Misha, Jussi Halme\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2021/05/2473c60e471fe9b40e246bf7711c87d3d6ea69a7.jpg\",\n      id: uuidv4(),\n      active: false,\n      color: [\"#E87274\", \"#2D385A\"],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=15088\",\n    },\n    {\n      name: \"Clocks Forward\",\n      artist: \"Psalm Trees, Guillaume Muschalle\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/db956cc3e3bb2d3725d0ce3f9aaf7190671c9451.jpg\",\n      id: uuidv4(),\n      active: false,\n      color: [\"#BB7970\", \"#F8D09F\"],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=8094\",\n    },\n    {\n      name: \"Far From Home\",\n      artist: \"Toonorth\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ad7fc4dda66ba986466fd2b1c416b0b12411ee28.jpg\",\n      id: uuidv4(),\n      active: false,\n      color: [\"#537879\", \"#F5E4B7\"],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=8127\",\n    },\n    {\n      name: \"Arcade\",\n      artist: \"Yasper\",\n      cover: \"https://chillhop.com/wp-content/uploads/2020/07/cd050898ca06fdfdb7fcf2313304d952c6dd8e41.jpg\",\n      id: uuidv4(),\n      active: false,\n      color: [\"#8554B5\",\"#D88D6E\"],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=7987\",\n    },\n    {\n      name: \"Going Back\",\n      artist: \"Swørn\",\n      cover: \"https://chillhop.com/wp-content/uploads/2020/10/737bb830d34592344eb4a2a1d2c006cdbfc811d9.jpg\",\n      id: uuidv4(),\n      active: false,\n      color: [\"##26444C\",\"#29375E\"],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10310\",\n    },\n    {\n      name: \"Waterfalls\",\n      artist: \"G Mills, Molly McPhaul\",\n      cover: \"https://chillhop.com/wp-content/uploads/2021/03/4f968562d372586b08590bf29066c638ee8fda64.jpg\",\n      id: uuidv4(),\n      active: false,\n      color: [\"#892D42\",\"#FEA568\"],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=16195\",\n    },\n    {\n      name: \"Rest Until Dark\",\n      artist: \"Sleepy Fish\",\n      cover: \"https://chillhop.com/wp-content/uploads/2020/09/c209a7df7b9bc133dfff73ce86ebc3c57c2b73dd.jpg\",\n      id: uuidv4(),\n      active: false,\n      color: [\"#3090AE\",\"#2A3E5D\"],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10015\",\n    },\n  ];\n}\n\nexport default chillHop;\n","import React, { useState, useRef } from \"react\";\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\nimport \"./styles/app.scss\";\nimport data from \"./data\";\n\nfunction App() {\n  //Ref <======== (this is used to connect the HTML element like a querySelector from JavaScrip)\n  const audioRef = useRef(null);\n\n  //State\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  // Event Handlers\n\n  const activeLibraryHandler = (nextPrev) => {\n    const newSongs = songs.map((song) => {\n      if (song.id === nextPrev.id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n\n    setSongs(newSongs);\n  };\n\n\n  const timeHandler = (event) => {\n    const current = event.target.currentTime;\n    const duration = event.target.duration;\n    //Calculates Percentage\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const percentage = Math.round((roundedCurrent / roundedDuration) *100);\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration: duration,\n      animationPercentage: percentage,\n    });\n  };\n\n  const songEndHandler = async () => {\n    let currentIndex= songs.findIndex((song)=> song.id === currentSong.id);\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\n      if(isPlaying) audioRef.current.play();\n  }\n\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        audioRef={audioRef}\n        setIsPlaying={setIsPlaying}\n        isPlaying={isPlaying}\n        currentSong={currentSong}\n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n        activeLibraryHandler={activeLibraryHandler}\n      />\n      <Library\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        //onTimeUpdate and onLoadedMetadata are unique to audio tags, can be used like onClick method\n        onTimeUpdate={timeHandler}\n        onLoadedMetadata={timeHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}